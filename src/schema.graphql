type Query {
  version: String!

  # Authenticated users can retrieve info about themselves
  me: User
}

type Mutation {
  # Everyone can signup
  signup(email: String!, password: String!): AuthPayload!

  # Signup with invite token
  signupByInvite(data: SignupByInviteInput!): AuthPayload!

  # Everyone can login
  login(email: String!, password: String!): AuthPayload!

  # Invite another user
  invite(email: String!): User!

  # Send reset password email
  sendResetPassword(email: String!): User!

  # Change password
  changePassword(email: String!): User!
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  inviteAccepted: Boolean!
}

input SignupByInviteInput {
  email: String!
  inviteToken: String!
  password: String!
}
